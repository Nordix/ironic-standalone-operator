---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: ironics.ironic.metal3.io
spec:
  group: ironic.metal3.io
  names:
    kind: Ironic
    listKind: IronicList
    plural: ironics
    singular: ironic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Currently requested version
      jsonPath: .status.requestedVersion
      name: Requested Version
      priority: 1
      type: string
    - description: Currently installed version
      jsonPath: .status.installedVersion
      name: Installed Version
      type: string
    - description: Is ready
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Ironic is the Schema for the ironics API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IronicSpec defines the desired state of Ironic
            properties:
              apiCredentialsName:
                description: |-
                  APICredentialsName is a reference to the secret with Ironic API credentials.
                  A new secret will be created if this field is empty.
                type: string
              database:
                description: |-
                  Database is a reference to a MariaDB database to use for persisting Ironic data.
                  Must be provided for a highly available architecture, optional otherwise.
                  If missing, a local SQLite database will be used, and the Ironic state will be reset on each pod restart.
                properties:
                  credentialsName:
                    description: Name of a secret with database credentials.
                    type: string
                  host:
                    description: IP address or host name of the database instance.
                    type: string
                  name:
                    description: Database name.
                    type: string
                  tlsCertificateName:
                    description: |-
                      Name of a secret with the a TLS certificate or a CA for verifying the database host.
                      If unset, Ironic will request an unencrypted connections, which is insecure,
                      and the server configuration may forbid it.
                    type: string
                required:
                - credentialsName
                - host
                - name
                type: object
              databaseName:
                description: |-
                  DatabaseName is a reference to the IronicDatabase object.
                  If missing, a local SQLite database will be used. Must be provided for a highly available architecture.

                  Deprecated: the IronicDatabase API is deprecated and will be removed soon in favour of explicit connection parameters.
                type: string
              deployRamdisk:
                description: DeployRamdisk defines settings for the provisioning/inspection
                  ramdisk based on Ironic Python Agent.
                properties:
                  disableDownloader:
                    description: |-
                      DisableDownloader tells the operator not to start the IPA downloader as the init container.
                      The user will be responsible for providing the right image to BareMetal Operator.
                    type: boolean
                  extraKernelParams:
                    description: |-
                      ExtraKernelParams is a string with kernel parameters to pass to the provisioning/inspection ramdisk.
                      Will not take effect if the host uses a pre-built ISO (either through its PreprovisioningImage or via the DEPLOY_ISO_URL baremetal-operator parameter).
                    type: string
                  sshKey:
                    description: SSHKey is the contents of the public key to inject
                      into the ramdisk for debugging purposes.
                    type: string
                type: object
              extraConfig:
                description: ExtraConfig defines extra options for Ironic configuration.
                items:
                  description: |-
                    ExtraConfig defines environment variables to override Ironic configuration
                    More info at the end of description section
                    https://github.com/metal3-io/ironic-image
                  properties:
                    group:
                      description: The group that config belongs to.
                      type: string
                    name:
                      description: The name of the config.
                      type: string
                    value:
                      description: The value of the config.
                      type: string
                  type: object
                type: array
              highAvailability:
                description: |-
                  HighAvailability causes Ironic to be deployed as a DaemonSet on control plane nodes instead of a deployment with 1 replica.
                  Requires database to be installed and linked to DatabaseName.
                  DHCP support is not yet implemented in the highly available architecture.
                  EXPERIMENTAL: do not use, the implementation is incomplete.
                type: boolean
              images:
                description: Images is a collection of container images to deploy
                  from.
                properties:
                  deployRamdiskBranch:
                    description: |-
                      DeployRamdiskBranch is the branch of IPA to download. The main branch is used by default.
                      Not used if deployRamdisk.disableDownloader is true.
                    type: string
                  deployRamdiskDownloader:
                    description: |-
                      DeployRamdiskDownloader is the image to be used at pod initialization to download the IPA ramdisk.
                      Not used if deployRamdisk.disableDownloader is true.
                    type: string
                  ironic:
                    description: Ironic is the Ironic image (including httpd).
                    type: string
                  keepalived:
                    description: |-
                      Keepalived is the Keepalived image.
                      Not used if networking.ipAddressManager is not set to keepalived.
                    type: string
                type: object
              inspection:
                description: Inspection defines inspection settings
                properties:
                  collectors:
                    description: |-
                      Collectors is a list of inspection collectors to enable.
                      See https://docs.openstack.org/ironic-python-agent/latest/admin/how_it_works.html#inspection-data for details.
                    items:
                      type: string
                    type: array
                  vlanInterfaces:
                    description: |-
                      List of interfaces to inspect for VLANs.
                      This can be interface names (to collect all VLANs using LLDP) or pairs <interface>.<vlan ID>.
                    items:
                      type: string
                    type: array
                type: object
              networking:
                description: Networking defines networking settings for Ironic.
                properties:
                  apiPort:
                    default: 6385
                    description: APIPort is the public port used for Ironic.
                    format: int32
                    minimum: 1
                    type: integer
                  bindInterface:
                    description: BindInterface makes Ironic API bound to only one
                      interface.
                    type: boolean
                  dhcp:
                    description: |-
                      DHCP is a configuration of DHCP for the network boot service (dnsmasq).
                      The service is only deployed when this is set.
                      This setting is currently incompatible with the highly available architecture.
                    properties:
                      dnsAddress:
                        description: |-
                          DNSAddress is the IP address of the DNS server to pass to hosts via DHCP.
                          Must not be set together with ServeDNS.
                        type: string
                      gatewayAddress:
                        description: GatewayAddress is the IP address of the gateway
                          to pass to hosts via DHCP.
                        type: string
                      hosts:
                        description: |-
                          Hosts is a set of DHCP host records to pass to dnsmasq.
                          Check the dnsmasq documentation on dhcp-host for an explanation of the format.
                          There is no API-side validation. Most users will leave this unset.
                        items:
                          type: string
                        type: array
                      ignore:
                        description: |-
                          Ignore is set of dnsmasq tags to ignore and not provide any DHCP.
                          Check the dnsmasq documentation on dhcp-ignore for an explanation of the format.
                          There is no API-side validation. Most users will leave this unset.
                        items:
                          type: string
                        type: array
                      networkCIDR:
                        description: NetworkCIDR is a CIRD of the provisioning network.
                          Required.
                        type: string
                      rangeBegin:
                        description: RangeBegin is the first IP that can be given
                          to hosts. Must be inside NetworkCIDR.
                        type: string
                      rangeEnd:
                        description: RangeEnd is the last IP that can be given to
                          hosts. Must be inside NetworkCIDR.
                        type: string
                      serveDNS:
                        description: |-
                          ServeDNS is set to true to pass the provisioning host as the DNS server on the provisioning network.
                          Must not be set together with DNSAddress.
                        type: boolean
                    type: object
                  externalIP:
                    description: |-
                      ExternalIP is used for accessing API and the image server from remote hosts.
                      This settings only applies to virtual media deployments. The IP will not be accessed from the cluster itself.
                    type: string
                  imageServerPort:
                    default: 6180
                    description: ImageServerPort is the public port used for serving
                      images.
                    format: int32
                    minimum: 1
                    type: integer
                  imageServerTLSPort:
                    default: 6183
                    description: ImageServerTLSPort is the public port used for serving
                      virtual media images over TLS.
                    format: int32
                    minimum: 1
                    type: integer
                  interface:
                    description: |-
                      Interface is a Linux network device to listen on.
                      Detected from IPAddress if missing.
                    type: string
                  ipAddress:
                    description: |-
                      IPAddress is the main IP address to listen on and use for communication.
                      Detected from Interface if missing. Cannot be provided for a highly available architecture.
                    type: string
                  ipAddressManager:
                    description: |-
                      Configures the way the provided IP address will be managed on the provided interface.
                      By default, the IP address is expected to be already present.
                      Use "keepalived" to start a Keepalived container managing the IP address.
                      Warning: keepalived is not compatible with the highly available architecture.
                    enum:
                    - ""
                    - keepalived
                    type: string
                  macAddresses:
                    description: |-
                      MACAddresses can be provided to make the start script pick the interface matching any of these addresses.
                      Only set if no other options can be used.
                    items:
                      type: string
                    type: array
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector is a selector which must be true for the Ironic pod to fit on a node.
                  Selector which must match a node's labels for the vmi to be scheduled on that node.
                  More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                type: object
              tls:
                description: TLS defines TLS-related settings for various network
                  interactions.
                properties:
                  certificateName:
                    description: CertificateName is a reference to the secret with
                      the TLS certificate.
                    type: string
                  disableVirtualMediaTLS:
                    description: |-
                      DisableVirtualMediaTLS turns off TLS on the virtual media server,
                      which may be required for hardware that cannot accept HTTPS links.
                    type: boolean
                type: object
              version:
                description: |-
                  Version is the version of Ironic to be installed.
                  Must be either "latest" or a MAJOR.MINOR pair, e.g. "27.0".
                  The default version depends on the operator branch.
                type: string
            type: object
          status:
            description: IronicStatus defines the observed state of Ironic
            properties:
              conditions:
                description: Conditions describe the state of the Ironic deployment.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              installedVersion:
                description: InstalledVersion identifies which version of Ironic was
                  installed.
                type: string
              requestedVersion:
                description: RequestedVersion identifies which version of Ironic was
                  last requested.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
